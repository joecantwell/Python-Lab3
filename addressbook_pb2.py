# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: addressbook.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='addressbook.proto',
  package='',
  serialized_pb=_b('\n\x11\x61\x64\x64ressbook.proto\"2\n\x07\x43ontact\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\n\n\x02id\x18\x02 \x01(\x05\x12\r\n\x05\x65mail\x18\x03 \x01(\t\"\x19\n\nContactAck\x12\x0b\n\x03msg\x18\x01 \x02(\t\"\x18\n\x08QueryReq\x12\x0c\n\x04name\x18\x01 \x02(\t2b\n\x0e\x43ontactService\x12%\n\nAddContact\x12\x08.Contact\x1a\x0b.ContactAck\"\x00\x12)\n\x10QueryContactName\x12\t.QueryReq\x1a\x08.Contact\"\x00')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_CONTACT = _descriptor.Descriptor(
  name='Contact',
  full_name='Contact',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Contact.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='Contact.id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='Contact.email', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=71,
)


_CONTACTACK = _descriptor.Descriptor(
  name='ContactAck',
  full_name='ContactAck',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='ContactAck.msg', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=98,
)


_QUERYREQ = _descriptor.Descriptor(
  name='QueryReq',
  full_name='QueryReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='QueryReq.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=100,
  serialized_end=124,
)

DESCRIPTOR.message_types_by_name['Contact'] = _CONTACT
DESCRIPTOR.message_types_by_name['ContactAck'] = _CONTACTACK
DESCRIPTOR.message_types_by_name['QueryReq'] = _QUERYREQ

Contact = _reflection.GeneratedProtocolMessageType('Contact', (_message.Message,), dict(
  DESCRIPTOR = _CONTACT,
  __module__ = 'addressbook_pb2'
  # @@protoc_insertion_point(class_scope:Contact)
  ))
_sym_db.RegisterMessage(Contact)

ContactAck = _reflection.GeneratedProtocolMessageType('ContactAck', (_message.Message,), dict(
  DESCRIPTOR = _CONTACTACK,
  __module__ = 'addressbook_pb2'
  # @@protoc_insertion_point(class_scope:ContactAck)
  ))
_sym_db.RegisterMessage(ContactAck)

QueryReq = _reflection.GeneratedProtocolMessageType('QueryReq', (_message.Message,), dict(
  DESCRIPTOR = _QUERYREQ,
  __module__ = 'addressbook_pb2'
  # @@protoc_insertion_point(class_scope:QueryReq)
  ))
_sym_db.RegisterMessage(QueryReq)


import abc
from grpc.early_adopter import implementations
from grpc.early_adopter import utilities
class EarlyAdopterContactServiceServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def AddContact(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def QueryContactName(self, request, context):
    raise NotImplementedError()
class EarlyAdopterContactServiceServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterContactServiceStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def AddContact(self, request):
    raise NotImplementedError()
  AddContact.async = None
  @abc.abstractmethod
  def QueryContactName(self, request):
    raise NotImplementedError()
  QueryContactName.async = None
def early_adopter_create_ContactService_server(servicer, port, root_certificates, key_chain_pairs):
  import addressbook_pb2
  import addressbook_pb2
  import addressbook_pb2
  import addressbook_pb2
  method_service_descriptions = {
    "AddContact": utilities.unary_unary_service_description(
      servicer.AddContact,
      addressbook_pb2.Contact.FromString,
      addressbook_pb2.ContactAck.SerializeToString,
    ),
    "QueryContactName": utilities.unary_unary_service_description(
      servicer.QueryContactName,
      addressbook_pb2.QueryReq.FromString,
      addressbook_pb2.Contact.SerializeToString,
    ),
  }
  return implementations.secure_server(method_service_descriptions, port, root_certificates, key_chain_pairs)
def early_adopter_create_ContactService_stub(host, port):
  import addressbook_pb2
  import addressbook_pb2
  import addressbook_pb2
  import addressbook_pb2
  method_invocation_descriptions = {
    "AddContact": utilities.unary_unary_invocation_description(
      addressbook_pb2.Contact.SerializeToString,
      addressbook_pb2.ContactAck.FromString,
    ),
    "QueryContactName": utilities.unary_unary_invocation_description(
      addressbook_pb2.QueryReq.SerializeToString,
      addressbook_pb2.Contact.FromString,
    ),
  }
  return implementations.insecure_stub(method_invocation_descriptions, host, port)
# @@protoc_insertion_point(module_scope)
